meta:
  title: "AIGNE Framework API Reference | Core, Transport, Models & More"
  description: "Dive into the comprehensive API reference for the AIGNE Framework. Explore documentation for @aigne/core, @aigne/transport, all model integrations, the agent library, and the CLI."
sections:
  - name: "apiHero"
    summary: "A clear and engaging introduction to the API reference page, setting the stage for developers to explore the AIGNE ecosystem's packages."
    title: "AIGNE Framework API Reference"
    description: "Your complete guide to every package in the AIGNE ecosystem. Let's dive in and see what you can build! This is your central hub for detailed information on all the tools you'll need to create powerful, modern AI applications."
  - name: "corePackage"
    summary: "Introduces the foundational @aigne/core package, explaining its crucial role and providing a code snippet to demonstrate its basic usage instantly."
    title: "@aigne/core"
    description: "This is the heart of the AIGNE Framework! It gives you all the essential tools—like the powerful agent system, flexible workflow patterns, and MCP integration—to start building incredible AI-driven apps right away."
    code:
      name: "BasicUsage.ts"
      content: "import { AIAgent, AIGNE } from \"@aigne/core\";\nimport { OpenAIChatModel } from \"@aigne/core/models/openai-chat-model.js\";\n\n// Create AI model instance\nconst model = new OpenAIChatModel({\n  apiKey: process.env.OPENAI_API_KEY,\n  model: process.env.DEFAULT_CHAT_MODEL || \"gpt-4-turbo\",\n});\n\n// Create AI agent\nconst agent = AIAgent.from({\n  name: \"Assistant\",\n  instructions: \"You are a helpful assistant.\",\n});\n\n// AIGNE: Main execution engine of AIGNE Framework.\nconst aigne = new AIGNE({ model });\n\n// Use the AIGNE to invoke the agent\nconst userAgent = await aigne.invoke(agent);\n\n// Send a message to the agent\nconst response = await userAgent.invoke(\n  \"Hello, can you help me write a short article?\".\n);\nconsole.log(response);"
  - name: "agentLibraryPackage"
    summary: "Highlights the @aigne/agent-library, showcasing how its pre-built agents, especially the OrchestratorAgent, accelerate the development of complex, multi-agent workflows."
    title: "@aigne/agent-library"
    description: "Why build from scratch? This library provides pre-built agents, like the OrchestratorAgent, to help you coordinate complex workflows between multiple agents. It’s all about planning, execution, and getting amazing results, faster."
    code:
      name: "OrchestrationExample.ts"
      content: "import { OrchestratorAgent } from \"@aigne/agent-library/orchestrator\";\nimport { AIAgent, AIGNE } from \"@aigne/core\";\nimport { OpenAIChatModel } from \"@aigne/core/models/openai-chat-model.js\";\n\nconst model = new OpenAIChatModel({\n  apiKey: process.env.OPENAI_API_KEY,\n  model: \"gpt-4-turbo\",\n});\n\n// Create specialized sub-agents\nconst researchAgent = AIAgent.from({\n  name: \"Researcher\",\n  instructions: \"You are a professional researcher responsible for collecting and analyzing information.\",\n  outputKey: \"research\",\n});\n\n// Create orchestrator agent\nconst orchestrator = new OrchestratorAgent({\n  name: \"WorkflowOrchestrator\",\n  instructions: \"You are responsible for coordinating research, writing, and editing processes.\",\n  skills: [researchAgent],\n});\n\n// Use the orchestrator agent\nconst aigne = new AIGNE({ model });\n\nconst result = await aigne.invoke(\n  orchestrator,\n  \"Applications of artificial intelligence in healthcare\"\n);\n\nconsole.log(result);"
  - name: "cliPackage"
    summary: "Introduces the @aigne/cli tool, emphasizing its role in simplifying and speeding up the entire development lifecycle with a handy list of common commands."
    title: "@aigne/cli"
    description: "Your command center for rapid development! The AIGNE CLI simplifies everything from creating projects and running agents to testing and deploying. Get ready to streamline your entire workflow."
    code:
      name: "Common Commands"
      content: "# Display help information\naigne --help\n\n# Create a new project\naigne create [path]\n\n# Run an agent\naigne run --path xxx\n\n# Run tests\naigne test --path xxx\n\n# Start MCP server\naigne serve-mcp --path xxx\n\n# Start observability server\naigne observe [option]"
  - name: "transportPackage"
    summary: "Explains the @aigne/transport package, detailing how it enables seamless communication in distributed AI systems with an example of its server implementation."
    title: "@aigne/transport"
    description: "Build distributed AI systems that talk to each other seamlessly. This package provides robust HTTP client and server implementations, making communication between your AIGNE components a breeze."
    code:
      name: "ServerSetup.ts (Express Example)"
      content: "import { AIAgent, AIGNE } from \"@aigne/core\";\nimport { AIGNEHTTPServer } from \"@aigne/transport/http-server/index.js\";\nimport express from \"express\";\n\nconst model = new OpenAIChatModel();\nconst chat = AIAgent.from({ name: \"chat\" });\nconst aigne = new AIGNE({ model, agents: [chat] });\n\n// Create an AIGNEServer instance\nconst aigneServer = new AIGNEHTTPServer(aigne);\n\n// Setup the server to handle incoming requests\nconst server = express();\nserver.post(\"/aigne/invoke\", async (req, res) => {\n  await aigneServer.invoke(req, res);\n});\nconst httpServer = server.listen(3000);"
  - name: "modelIntegrations"
    summary: "Presents a gallery of all supported AI model integrations, visually showcasing the framework's flexibility and making it easy for developers to see the breadth of available options."
    title: "Connect to Any Model, Instantly"
    description: "AIGNE is built for flexibility. We provide seamless, first-party integrations for the world's leading AI models. Just pick your favorite, plug it in, and you're ready to go!"
    list:
      - title: "OpenAI"
        description: "Directly connect to OpenAI's powerful GPT models, with full support for chat completions, function calling, and streaming for a dynamic experience."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-openai.png"
      - title: "Anthropic"
        description: "Leverage Anthropic's Claude models seamlessly within your AIGNE applications, complete with support for tool calling and streaming responses."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-anthropic.png"
      - title: "AWS Bedrock"
        description: "Tap into a diverse range of foundation models like Claude and Llama through AWS Bedrock, all within a secure and scalable environment."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-bedrock.png"
      - title: "DeepSeek"
        description: "Integrate with DeepSeek's advanced language models, utilizing their chat completion and function calling capabilities for your projects."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-deepseek.png"
      - title: "Google Gemini"
        description: "Utilize Google's state-of-the-art multimodal models, with built-in support for text, images, and function calling to build rich applications."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-gemini.png"
      - title: "Ollama"
        description: "Run powerful open-source models locally for ultimate privacy and offline access, all while using the consistent AIGNE interface."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-ollama.png"
      - title: "OpenRouter"
        description: "Access a massive variety of models from multiple providers through a single, unified API, complete with fallback options for maximum reliability."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-openrouter.png"
      - title: "XAI (Grok)"
        description: "Tap into the unique capabilities of XAI's Grok models, bringing their distinctive wit and real-time knowledge to your applications."
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-xai.png"
  - name: "pageCta"
    summary: "A final, energetic call-to-action that encourages developers to move from learning to building, guiding them to the 'Get Started' page."
    title: "Ready to Build Something Amazing?"
    description: "Grab the framework, explore the examples, and start creating your own intelligent agents today. We can't wait to see what you build!"
    ctaAction:
      text: "Get Started Now"
      link: "link:///get-started"