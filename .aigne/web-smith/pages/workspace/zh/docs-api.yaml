meta:
  title: "AIGNE 框架 API 参考 | Core、Transport、Models 等"
  description: "深入了解 AIGNE 框架的全面 API 参考。探索 @aigne/core、@aigne/transport、所有模型集成、agent 库和 CLI 的文档。"
sections:
  - name: "apiHero"
    summary: "对 API 参考页面的清晰且吸引人的介绍，引导开发者探索 AIGNE 生态系统的各个包。"
    title: "AIGNE 框架 API 参考"
    description: "这是涵盖 AIGNE 生态系统中每个包的完整指南。让我们深入了解你可以构建的内容！这是获取有关创建强大、现代 AI 应用所需所有工具的详细信息的中央枢纽。"
  - name: "corePackage"
    summary: "介绍基础的 @aigne/core 包，说明其关键作用并提供代码片段以立即演示其基本用法。"
    title: "@aigne/core"
    description: "这是 AIGNE 框架的核心！它为你提供所有必要工具——如强大的 agent 系统、灵活的工作流模式和 MCP 集成——以便立即开始构建令人惊叹的 AI 驱动应用。"
    code:
      name: "BasicUsage.ts"
      content: "import { AIAgent, AIGNE } from \"@aigne/core\";\nimport { OpenAIChatModel } from \"@aigne/core/models/openai-chat-model.js\";\n\n// Create AI model instance\nconst model = new OpenAIChatModel({\n  apiKey: process.env.OPENAI_API_KEY,\n  model: process.env.DEFAULT_CHAT_MODEL || \"gpt-4-turbo\",\n});\n\n// Create AI agent\nconst agent = AIAgent.from({\n  name: \"Assistant\",\n  instructions: \"You are a helpful assistant.\",\n});\n\n// AIGNE: Main execution engine of AIGNE Framework.\nconst aigne = new AIGNE({ model });\n\n// Use the AIGNE to invoke the agent\nconst userAgent = await aigne.invoke(agent);\n\n// Send a message to the agent\nconst response = await userAgent.invoke(\n  \"Hello, can you help me write a short article?\".\n);\nconsole.log(response);"
  - name: "agentLibraryPackage"
    summary: "强调 @aigne/agent-library，展示其预构建 agent（尤其是 OrchestratorAgent）如何加速复杂多 agent 工作流的开发。"
    title: "@aigne/agent-library"
    description: "为什么从头构建？该库提供预构建的 agents，例如 OrchestratorAgent，帮助你在多个 agent 之间协调复杂工作流。核心在于规划、执行，以更快速度获得出色结果。"
    code:
      name: "OrchestrationExample.ts"
      content: "import { OrchestratorAgent } from \"@aigne/agent-library/orchestrator\";\nimport { AIAgent, AIGNE } from \"@aigne/core\";\nimport { OpenAIChatModel } from \"@aigne/core/models/openai-chat-model.js\";\n\nconst model = new OpenAIChatModel({\n  apiKey: process.env.OPENAI_API_KEY,\n  model: \"gpt-4-turbo\",\n});\n\n// Create specialized sub-agents\nconst researchAgent = AIAgent.from({\n  name: \"Researcher\",\n  instructions: \"You are a professional researcher responsible for collecting and analyzing information.\",\n  outputKey: \"research\",\n});\n\n// Create orchestrator agent\nconst orchestrator = new OrchestratorAgent({\n  name: \"WorkflowOrchestrator\",\n  instructions: \"You are responsible for coordinating research, writing, and editing processes.\",\n  skills: [researchAgent],\n});\n\n// Use the orchestrator agent\nconst aigne = new AIGNE({ model });\n\nconst result = await aigne.invoke(\n  orchestrator,\n  \"Applications of artificial intelligence in healthcare\"\n);\n\nconsole.log(result);"
  - name: "cliPackage"
    summary: "介绍 @aigne/cli 工具，强调其通过常用命令列表简化并加快整个开发生命周期的作用。"
    title: "@aigne/cli"
    description: "你的快速开发指挥中心！AIGNE CLI 简化了从创建项目和运行 agents 到测试和部署的所有操作。准备好优化你的整个工作流吧。"
    code:
      name: "常用命令"
      content: "# Display help information\naigne --help\n\n# Create a new project\naigne create [path]\n\n# Run an agent\naigne run --path xxx\n\n# Run tests\naigne test --path xxx\n\n# Start MCP server\naigne serve-mcp --path xxx\n\n# Start observability server\naigne observe [option]"
  - name: "transportPackage"
    summary: "说明 @aigne/transport 包，详述其如何在分布式 AI 系统中实现无缝通信，并举例其服务器实现。"
    title: "@aigne/transport"
    description: "构建可以无缝互通的分布式 AI 系统。该包提供健壮的 HTTP 客户端和服务器实现，使你的 AIGNE 组件之间的通信变得轻而易举。"
    code:
      name: "ServerSetup.ts (Express Example)"
      content: "import { AIAgent, AIGNE } from \"@aigne/core\";\nimport { AIGNEHTTPServer } from \"@aigne/transport/http-server/index.js\";\nimport express from \"express\";\n\nconst model = new OpenAIChatModel();\nconst chat = AIAgent.from({ name: \"chat\" });\nconst aigne = new AIGNE({ model, agents: [chat] });\n\n// Create an AIGNEServer instance\nconst aigneServer = new AIGNEHTTPServer(aigne);\n\n// Setup the server to handle incoming requests\nconst server = express();\nserver.post(\"/aigne/invoke\", async (req, res) => {\n  await aigneServer.invoke(req, res);\n});\nconst httpServer = server.listen(3000);"
  - name: "modelIntegrations"
    summary: "展示所有受支持的 AI 模型集成画廊，以直观展示框架的灵活性，并便于开发者查看可用选项的广度。"
    title: "即刻连接任意模型"
    description: "AIGNE 为灵活性而建。我们提供世界领先 AI 模型的无缝一方集成。只需选择你喜欢的模型，插入即可开始使用！"
    list:
      - title: "OpenAI"
        description: "直接连接到 OpenAI 强大的 GPT 模型，完整支持聊天补全、函数调用和流式响应以提供动态体验。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-openai.png"
      - title: "Anthropic"
        description: "在你的 AIGNE 应用中无缝利用 Anthropic 的 Claude 模型，全面支持工具调用和流式响应。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-anthropic.png"
      - title: "AWS Bedrock"
        description: "通过 AWS Bedrock 访问多种基础模型（如 Claude 和 Llama），在安全且可扩展的环境中使用。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-bedrock.png"
      - title: "DeepSeek"
        description: "与 DeepSeek 的高级语言模型集成，利用其聊天补全和函数调用功能来构建项目。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-deepseek.png"
      - title: "Google Gemini"
        description: "使用 Google 最先进的多模态模型，内建对文本、图像和函数调用的支持，以构建丰富的应用。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-gemini.png"
      - title: "Ollama"
        description: "在本地运行强大的开源模型以获得最高隐私和离线访问，同时使用一致的 AIGNE 接口。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-ollama.png"
      - title: "OpenRouter"
        description: "通过统一 API 访问来自多个提供商的大量模型，并提供回退选项以实现最大可靠性。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-openrouter.png"
      - title: "XAI (Grok)"
        description: "利用 XAI 的 Grok 模型的独特能力，将其机智和实时知识带入你的应用。"
        imageButton:
          link: "link:///docs"
          image: "mediakit://aigne-xai.png"
  - name: "pageCta"
    summary: "最后的号召性用语，鼓励开发者从学习走向构建，并引导他们前往“入门”页面。"
    title: "准备好构建惊人的项目了吗？"
    description: "获取框架，查看示例，开始创建你自己的智能 agents。我们迫不及待想看到你构建的成果！"
    ctaAction:
      text: "立即开始"
      link: "link:///get-started"