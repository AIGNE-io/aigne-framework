classDiagram
    class PromptBuilderBuildOptions {
        +Agent agent
        +Context context
        +object input
    }

    PromptBuilder <|.. PromptBuilderBuildOptions
    class PromptBuilder {
        +build(PromptBuilderBuildOptions options) Prompt
    }

    Prompt <|.. PromptBuilder
    class Prompt {
        +List~object~ messages
        +List~Agent~ tools
        +ChatModel model
        +object context
        +object responseFormat
    }

    class Model {
        +call(Prompt input) object*
    }

    ChatModel --|> Model
    class ChatModel {
    }

    ImageModel --|> Model
    class ImageModel {
    }

    Agent --|> EventEmitter
    class Agent {
        +string name
        +string description
        +object inputSchema
        +object outputSchema
        +List~Agent~ tools
        +List~Agent~ _skills?
        +Map~string, Agent~ skills

        +call(object input, Context context) object

        +process(object input, Context context) object*
        -verifyInput() void
        -verifyOutput() void
    }

    AIAgent --|> Agent
    AIAgent *.. PromptBuilder
    class AIAgent {
        +PromptBuilder promptBuilder
        +ChatModel model
    }

    ImageAgent --|> Agent
    ImageAgent *.. PromptBuilder
    class ImageAgent {
        +ImageModel model
        +string instructions
        +PromptBuilder promptBuilder
    }

    FunctionAgent --|> Agent
    class FunctionAgent {
        +Function fn
    }

    RPCAgent --|> Agent
    class RPCAgent {
        +string url
    }

    MCPAgent --|> Agent
    MCPAgent *.. MCPClient
    class MCPAgent {
        +MCPClient client
    }

    class MCPClient {
    }

    class Message {
        +string id
        +string agentId
        +object output
    }

    MessageQueue <|.. Message
    class MessageQueue {
        +publish(string topic, Message message) void
        +subscribe(string topic, Function callback) void
        +unsubscribe(string topic, Function callback) void
    }

    class History {
        +string id
        +string agentId
        +object input
        +object output
    }

    Context *.. ChatModel
    Context *.. ImageModel
    Context --|> MessageQueue
    Context <|.. History
    class Context {
        +ChatModel model
        +ImageModel imageModel
        +List~Agent~ tools
        +object state

        +getHistories(string agentId, int limit) List~History~
        +addHistory(History history) void
    }

    class EventEmitter {
        +on(): void
        +emit(): void
    }

    ExecutionEngine --|> Context
    ExecutionEngine --|> EventEmitter
    class ExecutionEngine {
        +run(object input, Agent agent)
        +run(object input, Agent agent, Agent agent)
        +run(object input, Agent agent, Agent agent, ...)
    }
