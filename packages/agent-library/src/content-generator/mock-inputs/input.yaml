rules: |
  请帮助我生成一个跟 ArcBlock 内容相关的站点
  ## 站点受众
  这个站点的受众是普通用户，需要确保结构清晰，易于理解，符合普通用户的认知习惯。

  ## 结构规划
  对于结构规划需要生成完整的站点结构，用于开发团队编写页面代码，另外在设计结构时，需要考虑 SEO 优化要求，确保每个页面能在 google 搜索结果中排名靠前。

  ## 结构规划规则
  1. 需要确保结构清晰，易于理解，符合普通用户的认知习惯。
  2. 需要确保每个页面都有 SEO 关键词，且能够满足 SEO 优化要求。
  3. 需要确保每个页面都有唯一的 URL。
  4. 页面结构可以尽可能复杂，因为会涉及不同页面层级
  5. 页面不能超过五个

locale: zh

datasources: |
  ArcBlock 作为区块链3.0平台，其核心功能可以细化为以下几个方面，便于用于站点内容生成：

  1. 开放链访问协议（OCAP）
  ArcBlock 提供开放链访问协议，允许开发者跨多个区块链网络调用和交互，支持多链互操作，避免被单一公链锁定，提升应用的灵活性和扩展性。

  2. 基石程序（Blocklet）
  Blocklet 是 ArcBlock 的模块化微服务组件，类似于云端无服务器架构，开发者可以通过组合和定制这些组件快速构建去中心化应用，无需从零开发，极大降低开发复杂度。

  3. 去中心化订阅网关
  ArcBlock 设计了去中心化的消息通信网关，支持多种网络协议（如WebSocket、MQTT等），实现节点和应用间的安全实时通信，提升用户体验和应用响应速度。

  4. 代币与身份服务组件
  平台内置了高度可重用的代币服务、用户身份管理（去中心化身份DID）、钱包和消息服务等组件，支持安全的数字身份认证和代币经济体系，保障用户隐私和资产安全。

  5. Forge Framework 框架
  Forge 是 ArcBlock 的底层区块链框架，类似于 Cosmos SDK，支持开发者定制专属区块链，提供RPC接口调用共识、状态和存储引擎，帮助实现高性能共识和分布式存储。

  6. 云原生架构与生态系统
  ArcBlock 采用云原生设计，支持在主流云平台（如AWS、Azure）自动扩展和分布式部署，配合应用市场和激励机制，形成完整的生态体系，推动区块链应用普及。

  7. 用户体验与开发者支持
  平台注重提升用户综合体验，通过模块化设计和最佳实践指导，帮助开发者将非链上逻辑合理转移，提升整体性能和响应速度。同时提供丰富的SDK、文档和社区支持，降低开发门槛。

  总结来说，ArcBlock 是一个集开放协议、模块化组件、去中心化通信、身份与代币服务、定制区块链框架及云原生生态于一体的区块链应用开发平台，旨在简化开发流程，提升性能和用户体验，推动区块链技术的广泛应用。
evaluationDimensions: |
  1. 主题一致性与焦点明确性
  - 内容结构是否紧密围绕主题，没有跑题或偏离？
  - 重点内容是否突出，层次分明？
  - 是否存在与主题不相关的冗余节点？

  2. 受众适配度
  - 结构复杂度是否匹配目标受众（专家 vs 普通消费者）？
  - 内容组织方式是否符合受众的认知习惯和知识背景？
  - 导航路径是否适合目标用户的使用场景？

  3. 内容架构合理性
  - 层级关系是否逻辑清晰，符合信息架构最佳实践？
  - 结构深度与广度是否平衡，避免过深或过浅？
  - 是否遵循常见的网站内容组织模式（如：首页-分类-详情）？
  - 是否都包含 SEO 关键词？

  4. 内容完整性与去重
  - 是否完整覆盖主题的核心概念，无明显遗漏？
  - 是否存在重复或高度相似的内容节点？
  - 内容颗粒度是否合适，既不过于分散也不过于聚合？
  - 每个页面是否都有唯一的 URL？

  5. 用户体验与渐进性
  - 内容组织是否遵循循序渐进的原则（从简单到复杂、从概览到详细）？
  - 用户路径是否清晰，能够自然地引导用户深入了解？
  - 关键入口页面是否易于发现和访问？

  6. 可扩展性与维护性
  - 结构设计是否便于后续内容的添加和修改？
  - 分类体系是否具有良好的可扩展性？
  - 是否存在孤立节点或难以归类的内容？
