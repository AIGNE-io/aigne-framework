id: 3ebe07bc5a54388e
createdAt: 2025-09-25T12:52:05.130Z
updatedAt: 2025-09-25T12:52:05.130Z
publishedAt: 2025-09-25T12:52:05.130Z
isPublic: true
locales:
  en:
    backgroundColor: ""
    style:
      maxWidth: custom:1560px
      paddingY: normal
      paddingX: normal
    title: AIGNE Workflow Patterns | Sequential, Concurrent, Router & More
    description: Discover AIGNE's powerful workflow patterns. Learn to build complex
      AI applications with Sequential, Concurrent, Router, Handoff, Reflection,
      and Code Execution patterns. Includes diagrams and code examples.
    header:
      sticky: true
  zh:
    backgroundColor: ""
    style:
      maxWidth: custom:1560px
      paddingY: normal
      paddingX: normal
    title: AIGNE 工作流模式 | 顺序、并发、路由等
    description: 探索 AIGNE 的强大工作流模式。学习使用 顺序、并发、路由、移交、反思 和 代码执行 模式构建复杂的 AI 应用。包含图表和代码示例。
    header:
      sticky: true
sections:
  937f6af55e33529e:
    id: 937f6af55e33529e
    name: Hero
    component: layout-block
    sections:
      61a609a6f3ef2c0d:
        id: 61a609a6f3ef2c0d
        name: Title
        component: layout-block
        sections:
          d3563ab80b7e702a:
            id: d3563ab80b7e702a
            name: RichText
            component: custom-component
            config:
              useCache: true
              componentId: xoHu0J44322kDYc-
            sectionIds: []
          f15227da3b858fd7:
            id: f15227da3b858fd7
            name: action
            component: custom-component
            config:
              useCache: true
              componentId: a44r0SiGV9AFn2Fj
            sectionIds: []
        sectionIds:
          - d3563ab80b7e702a
          - f15227da3b858fd7
        config:
          gridSettings:
            desktop:
              d3563ab80b7e702a:
                x: 0
                y: 0
                w: 12
                h: 1
              f15227da3b858fd7:
                x: 0
                y: 1
                w: 12
                h: 1
          gap: large
          paddingX: none
          maxWidth: full
          alignContent: center
    sectionIds:
      - 61a609a6f3ef2c0d
    config:
      gridSettings:
        desktop:
          61a609a6f3ef2c0d:
            x: 0
            y: 0
            w: 8
            h: 1
      paddingY: custom:150px
      background: grey.400
      backgroundFullWidth: true
      alignContent: start
      gap: normal
      paddingX: none
  b0ff19d620d9d126:
    id: b0ff19d620d9d126
    name: Step-2
    component: layout-block
    sections:
      72f4519edda5cd9a:
        id: 72f4519edda5cd9a
        name: RichText
        component: custom-component
        config:
          useCache: true
          componentId: xoHu0J44322kDYc-
        sectionIds: []
      a4ca22fa75ace2b0:
        id: a4ca22fa75ace2b0
        name: Container
        component: layout-block
        sections:
          0ae2c25b71903de4:
            id: 0ae2c25b71903de4
            name: Code
            component: custom-component
            config:
              useCache: true
              componentId: 2EHGy3vwxlS9JGr2
            sectionIds: []
        sectionIds:
          - 0ae2c25b71903de4
        config:
          gridSettings:
            desktop:
              0ae2c25b71903de4:
                x: 0
                y: 0
                w: 12
                h: 1
          borderRadius: medium
          height: unset
    sectionIds:
      - 72f4519edda5cd9a
      - a4ca22fa75ace2b0
    config:
      gridSettings:
        desktop:
          72f4519edda5cd9a:
            x: 0
            y: 0
            w: 6
            h: 1
          a4ca22fa75ace2b0:
            x: 6
            y: 0
            w: 6
            h: 1
        mobile:
          72f4519edda5cd9a:
            x: 0
            y: 0
            w: 12
            h: 1
          a4ca22fa75ace2b0:
            x: 0
            y: 1
            w: 12
            h: 1
      gap: normal
  16d9d6d6dd3ed00f:
    id: 16d9d6d6dd3ed00f
    name: Step-2
    component: layout-block
    sections:
      e662d6c45a814da9:
        id: e662d6c45a814da9
        name: RichText
        component: custom-component
        config:
          useCache: true
          componentId: xoHu0J44322kDYc-
        sectionIds: []
      2f5a01fb73c4eadb:
        id: 2f5a01fb73c4eadb
        name: Container
        component: layout-block
        sections:
          1e3f8a6e7192ee4d:
            id: 1e3f8a6e7192ee4d
            name: Code
            component: custom-component
            config:
              useCache: true
              componentId: 2EHGy3vwxlS9JGr2
            sectionIds: []
        sectionIds:
          - 1e3f8a6e7192ee4d
        config:
          gridSettings:
            desktop:
              1e3f8a6e7192ee4d:
                x: 0
                y: 0
                w: 12
                h: 1
          borderRadius: medium
          height: unset
    sectionIds:
      - e662d6c45a814da9
      - 2f5a01fb73c4eadb
    config:
      gridSettings:
        desktop:
          e662d6c45a814da9:
            x: 0
            y: 0
            w: 6
            h: 1
          2f5a01fb73c4eadb:
            x: 6
            y: 0
            w: 6
            h: 1
        mobile:
          e662d6c45a814da9:
            x: 0
            y: 0
            w: 12
            h: 1
          2f5a01fb73c4eadb:
            x: 0
            y: 1
            w: 12
            h: 1
      gap: normal
  d8dfd84a98473a87:
    id: d8dfd84a98473a87
    name: Step-2
    component: layout-block
    sections:
      29aef9b049421e10:
        id: 29aef9b049421e10
        name: RichText
        component: custom-component
        config:
          useCache: true
          componentId: xoHu0J44322kDYc-
        sectionIds: []
      872dfaf0ea9f6dd5:
        id: 872dfaf0ea9f6dd5
        name: Container
        component: layout-block
        sections:
          c7740f39af614660:
            id: c7740f39af614660
            name: Code
            component: custom-component
            config:
              useCache: true
              componentId: 2EHGy3vwxlS9JGr2
            sectionIds: []
        sectionIds:
          - c7740f39af614660
        config:
          gridSettings:
            desktop:
              c7740f39af614660:
                x: 0
                y: 0
                w: 12
                h: 1
          borderRadius: medium
          height: unset
    sectionIds:
      - 29aef9b049421e10
      - 872dfaf0ea9f6dd5
    config:
      gridSettings:
        desktop:
          29aef9b049421e10:
            x: 0
            y: 0
            w: 6
            h: 1
          872dfaf0ea9f6dd5:
            x: 6
            y: 0
            w: 6
            h: 1
        mobile:
          29aef9b049421e10:
            x: 0
            y: 0
            w: 12
            h: 1
          872dfaf0ea9f6dd5:
            x: 0
            y: 1
            w: 12
            h: 1
      gap: normal
  4e3e707ed4358d58:
    id: 4e3e707ed4358d58
    name: Step-2
    component: layout-block
    sections:
      df15a417f7815db4:
        id: df15a417f7815db4
        name: RichText
        component: custom-component
        config:
          useCache: true
          componentId: xoHu0J44322kDYc-
        sectionIds: []
      8c5cc2b4760aa16f:
        id: 8c5cc2b4760aa16f
        name: Container
        component: layout-block
        sections:
          d7a5f72157229157:
            id: d7a5f72157229157
            name: Code
            component: custom-component
            config:
              useCache: true
              componentId: 2EHGy3vwxlS9JGr2
            sectionIds: []
        sectionIds:
          - d7a5f72157229157
        config:
          gridSettings:
            desktop:
              d7a5f72157229157:
                x: 0
                y: 0
                w: 12
                h: 1
          borderRadius: medium
          height: unset
    sectionIds:
      - df15a417f7815db4
      - 8c5cc2b4760aa16f
    config:
      gridSettings:
        desktop:
          df15a417f7815db4:
            x: 0
            y: 0
            w: 6
            h: 1
          8c5cc2b4760aa16f:
            x: 6
            y: 0
            w: 6
            h: 1
        mobile:
          df15a417f7815db4:
            x: 0
            y: 0
            w: 12
            h: 1
          8c5cc2b4760aa16f:
            x: 0
            y: 1
            w: 12
            h: 1
      gap: normal
  b8cc2d2abbfbf7d3:
    id: b8cc2d2abbfbf7d3
    name: Step-2
    component: layout-block
    sections:
      c538306628f58aa2:
        id: c538306628f58aa2
        name: RichText
        component: custom-component
        config:
          useCache: true
          componentId: xoHu0J44322kDYc-
        sectionIds: []
      6381f3b228d194a7:
        id: 6381f3b228d194a7
        name: Container
        component: layout-block
        sections:
          f42d95cd286babfe:
            id: f42d95cd286babfe
            name: Code
            component: custom-component
            config:
              useCache: true
              componentId: 2EHGy3vwxlS9JGr2
            sectionIds: []
        sectionIds:
          - f42d95cd286babfe
        config:
          gridSettings:
            desktop:
              f42d95cd286babfe:
                x: 0
                y: 0
                w: 12
                h: 1
          borderRadius: medium
          height: unset
    sectionIds:
      - c538306628f58aa2
      - 6381f3b228d194a7
    config:
      gridSettings:
        desktop:
          c538306628f58aa2:
            x: 0
            y: 0
            w: 6
            h: 1
          6381f3b228d194a7:
            x: 6
            y: 0
            w: 6
            h: 1
        mobile:
          c538306628f58aa2:
            x: 0
            y: 0
            w: 12
            h: 1
          6381f3b228d194a7:
            x: 0
            y: 1
            w: 12
            h: 1
      gap: normal
  b91c3c08dc514570:
    id: b91c3c08dc514570
    name: Step-2
    component: layout-block
    sections:
      232d64ab8275e287:
        id: 232d64ab8275e287
        name: RichText
        component: custom-component
        config:
          useCache: true
          componentId: xoHu0J44322kDYc-
        sectionIds: []
      e20191e496d21333:
        id: e20191e496d21333
        name: Container
        component: layout-block
        sections:
          a357c273db4ff1f5:
            id: a357c273db4ff1f5
            name: Code
            component: custom-component
            config:
              useCache: true
              componentId: 2EHGy3vwxlS9JGr2
            sectionIds: []
        sectionIds:
          - a357c273db4ff1f5
        config:
          gridSettings:
            desktop:
              a357c273db4ff1f5:
                x: 0
                y: 0
                w: 12
                h: 1
          borderRadius: medium
          height: unset
    sectionIds:
      - 232d64ab8275e287
      - e20191e496d21333
    config:
      gridSettings:
        desktop:
          232d64ab8275e287:
            x: 0
            y: 0
            w: 6
            h: 1
          e20191e496d21333:
            x: 6
            y: 0
            w: 6
            h: 1
        mobile:
          232d64ab8275e287:
            x: 0
            y: 0
            w: 12
            h: 1
          e20191e496d21333:
            x: 0
            y: 1
            w: 12
            h: 1
      gap: normal
  7bee9166c67ee824:
    id: 7bee9166c67ee824
    name: CTA
    component: layout-block
    sections:
      5f378950d95dc434:
        id: 5f378950d95dc434
        name: Section Layout
        component: layout-block
        sections:
          7782cfc0f86813a6:
            id: 7782cfc0f86813a6
            name: RichText
            component: custom-component
            config:
              useCache: true
              componentId: xoHu0J44322kDYc-
            sectionIds: []
          da9a1dc123c3f3b0:
            id: da9a1dc123c3f3b0
            name: Action
            component: custom-component
            config:
              useCache: true
              componentId: a44r0SiGV9AFn2Fj
            sectionIds: []
        sectionIds:
          - 7782cfc0f86813a6
          - da9a1dc123c3f3b0
        config:
          gridSettings:
            desktop:
              7782cfc0f86813a6:
                x: 2
                y: 0
                w: 8
                h: 1
              da9a1dc123c3f3b0:
                x: 0
                y: 1
                w: 12
                h: 1
          background: background.paper
          padding: large
          gap: normal
          borderRadius: medium
          border: none
          paddingY: large
    sectionIds:
      - 5f378950d95dc434
    config:
      padding: large
      gridSettings:
        desktop:
          5f378950d95dc434:
            x: 0
            y: 0
            w: 12
            h: 1
      gap: none
      maxWidth: full
      paddingY: custom:100px
      paddingX: none
sectionIds:
  - 937f6af55e33529e
  - b0ff19d620d9d126
  - 16d9d6d6dd3ed00f
  - d8dfd84a98473a87
  - 4e3e707ed4358d58
  - b8cc2d2abbfbf7d3
  - b91c3c08dc514570
  - 7bee9166c67ee824
dataSource:
  d3563ab80b7e702a:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: Master Your AI with Powerful Workflow Patterns
            style:
              color: common.white
              variant: h1
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1754035056337-47v01f57c
                type: text
                text: Stop juggling complex logic! AIGNE gives you a toolkit of plug-and-play
                  workflow patterns to orchestrate AI agents like a pro. Build
                  sophisticated, multi-step applications that just work. Let's
                  dive in and see how you can bring your most ambitious ideas to
                  life!
                style:
                  color: common.white
                  fontSize: 16px
                  variant: body1
        kyg0hdy5uqq4gc1o:
          value: flex-start
        v5utpm7bu9yvdpnq:
          value: flex-start
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 用强大的工作流模式掌控你的 AI
            style:
              color: common.white
              variant: h1
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1754035056337-47v01f57c
                type: text
                text: 无需再手动处理复杂逻辑！AIGNE 为你提供一套即插即用的工作流模式，用以像专家一样编排 AI
                  代理。构建复杂的多步骤应用并让它们可靠运行。下面让我们深入了解如何将你的创意变为现实。
                style:
                  color: common.white
                  fontSize: 16px
                  variant: body1
        kyg0hdy5uqq4gc1o:
          value: flex-start
        v5utpm7bu9yvdpnq:
          value: flex-start
  f15227da3b858fd7:
    en:
      properties:
        b8x4m3n9kp7qtw5r:
          value:
            - id: btn-default-1
              type: link
              text: See All Examples
              url: link:///examples
              variant: contained
              size: large
              target: _blank
              needLogin: false
        v9979xeclpsbvn0n:
          value: flex-start
        v5utpm7bu9yvdpnq:
          value: flex-start
    zh:
      properties:
        b8x4m3n9kp7qtw5r:
          value:
            - id: btn-default-1
              type: link
              text: 查看所有示例
              url: link:///examples
              variant: contained
              size: large
              target: _blank
              needLogin: false
        v9979xeclpsbvn0n:
          value: flex-start
        v5utpm7bu9yvdpnq:
          value: flex-start
  72f4519edda5cd9a:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: "Sequential Pattern: Perfecting the Process"
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: Need things done in a specific order? The Sequential pattern is your
                  go-to! It creates a perfect, step-by-step pipeline where each
                  agent completes its task before passing the baton to the next.
                  It’s ideal for multi-stage content generation, data
                  processing, and any task that demands a guaranteed execution
                  order. You'll love the control and predictability!
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 顺序模式：完善流程
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: 需要按特定顺序完成任务？顺序模式是你的首选！它创建一个逐步的管道，每个代理在将任务交接给下一个之前完成自己的工作。非常适合多阶段内容生成、数据处理以及任何要求执行顺序的任务。你会喜欢它带来的可控性和可预测性。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  0ae2c25b71903de4:
    en:
      properties:
        b2jrz12ik7esf93z:
          value: sequential-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, ProcessMode, TeamAgent } from
            "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({
              apiKey: OPENAI_API_KEY,
            });


            const conceptExtractor = AIAgent.from({
              instructions: `\
            You are a marketing analyst. Give a product description,
            identity:\n- Key features\n- Target audience\n- Unique selling
            points\n\nProduct description:\n{{product}}`,
              outputKey: "concept",
            });


            const writer = AIAgent.from({
              instructions: `\
            You are a marketing copywriter. Given a block of text describing
            features, audience, and USPs,\ncompose a compelling marketing copy
            (like a newsletter section) that highlights these points.\nOutput
            should be short (around 150 words), output just the copy as a single
            text block.\n\nProduct description:\n{{product}}\n\nBelow is the
            info about the product:\n{{concept}}`,
              outputKey: "draft",
            });


            const formatProof = AIAgent.from({
              instructions: `\
            You are an editor. Given the draft copy, correct grammar, improve
            clarity, ensure consistent tone,\ngive format and make it polished.
            Output the final improved copy as a single text block.\n\nProduct
            description:\n{{product}}\n\nBelow is the info about the
            product:\n{{concept}}\n\nDraft copy:\n{{draft}}`,
              outputKey: "content",
            });


            const aigne = new AIGNE({ model });


            const teamAgent = TeamAgent.from({
              skills: [conceptExtractor, writer, formatProof],
              mode: ProcessMode.sequential,
            });


            const result = await aigne.invoke(teamAgent, {
              product: "AIGNE is a No-code Generative AI Apps Engine",
            });


            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
    zh:
      properties:
        b2jrz12ik7esf93z:
          value: sequential-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, ProcessMode, TeamAgent } from
            "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({
              apiKey: OPENAI_API_KEY,
            });


            const conceptExtractor = AIAgent.from({
              instructions: `\
            You are a marketing analyst. Give a product description, identity:

            - Key features

            - Target audience

            - Unique selling points

            \nProduct description:

            {{product}}`,
              outputKey: "concept",
            });


            const writer = AIAgent.from({
              instructions: `\
            You are a marketing copywriter. Given a block of text describing
            features, audience, and USPs,

            compose a compelling marketing copy (like a newsletter section) that
            highlights these points.

            Output should be short (around 150 words), output just the copy as a
            single text block.

            \nProduct description:

            {{product}}

            \nBelow is the info about the product:

            {{concept}}`,
              outputKey: "draft",
            });


            const formatProof = AIAgent.from({
              instructions: `\
            You are an editor. Given the draft copy, correct grammar, improve
            clarity, ensure consistent tone,

            give format and make it polished. Output the final improved copy as
            a single text block.

            \nProduct description:

            {{product}}

            \nBelow is the info about the product:

            {{concept}}

            \nDraft copy:

            {{draft}}`,
              outputKey: "content",
            });


            const aigne = new AIGNE({ model });


            const teamAgent = TeamAgent.from({
              skills: [conceptExtractor, writer, formatProof],
              mode: ProcessMode.sequential,
            });


            const result = await aigne.invoke(teamAgent, {
              product: "AIGNE is a No-code Generative AI Apps Engine",
            });


            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
  e662d6c45a814da9:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: "Concurrency Pattern: Supercharge Your Speed"
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: Why wait when you can do it all at once? The Concurrency pattern unleashes
                  the power of parallel processing, letting multiple agents
                  tackle independent tasks simultaneously. Watch your
                  application's efficiency skyrocket! It's a game-changer for
                  parallel data analysis or getting multi-dimensional feedback
                  in a flash.
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 并发模式：极速提升效率
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: 为何等待，当你可以同时完成多项工作？并发模式释放并行处理的能力，让多个代理同时处理相互独立的任务。观察应用效率的显著提升！对于并行数据分析或在短时间内获取多维反馈而言，这是一项重要的改进。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  1e3f8a6e7192ee4d:
    en:
      properties:
        b2jrz12ik7esf93z:
          value: concurrency-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, ProcessMode, TeamAgent } from
            "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({
              apiKey: OPENAI_API_KEY,
            });


            const featureExtractor = AIAgent.from({
              instructions: `\
            You are a product analyst. Extract and summarize the key features of
            the product.\n\nProduct description:\n{{product}}`,
              outputKey: "features",
            });


            const audienceAnalyzer = AIAgent.from({
              instructions: `\
            You are a market researcher. Identify the target audience for the
            product.\n\nProduct description:\n{{product}}`,
              outputKey: "audience",
            });


            const aigne = new AIGNE({ model });


            const teamAgent = TeamAgent.from({
              skills: [featureExtractor, audienceAnalyzer],
              mode: ProcessMode.parallel,
            });


            const result = await aigne.invoke(teamAgent, {
              product: "AIGNE is a No-code Generative AI Apps Engine",
            });


            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
    zh:
      properties:
        b2jrz12ik7esf93z:
          value: concurrency-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, ProcessMode, TeamAgent } from
            "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({
              apiKey: OPENAI_API_KEY,
            });


            const featureExtractor = AIAgent.from({
              instructions: `\
            You are a product analyst. Extract and summarize the key features of
            the product.

            \nProduct description:

            {{product}}`,
              outputKey: "features",
            });


            const audienceAnalyzer = AIAgent.from({
              instructions: `\
            You are a market researcher. Identify the target audience for the
            product.

            \nProduct description:

            {{product}}`,
              outputKey: "audience",
            });


            const aigne = new AIGNE({ model });


            const teamAgent = TeamAgent.from({
              skills: [featureExtractor, audienceAnalyzer],
              mode: ProcessMode.parallel,
            });


            const result = await aigne.invoke(teamAgent, {
              product: "AIGNE is a No-code Generative AI Apps Engine",
            });


            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
  29aef9b049421e10:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: "Router Pattern: The Smart Traffic Director"
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: Got different tasks for different specialists? The Router pattern acts as
                  an intelligent traffic cop, automatically directing incoming
                  requests to the right agent based on the content. Build
                  brilliant customer service bots or multi-talented assistants
                  that always know who to call for the job. It's so satisfying
                  to see it in action!
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 路由模式：智能流量调度器
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: 不同的任务需要不同的专家处理？路由模式充当智能分流器，根据内容自动将传入请求发送给合适的代理。可用于构建出色的客户服务机器人或多才多艺的助手，总是知道该呼叫谁来处理问题。看到它运行会很令人满意。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  c7740f39af614660:
    en:
      properties:
        b2jrz12ik7esf93z:
          value: router-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE } from "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            const productSupport = AIAgent.from({ name: "product_support",
            description: "Agent to assist with any product-related questions.",
            instructions: `You are an agent capable of handling any
            product-related questions.` });

            const feedback = AIAgent.from({ name: "feedback", description:
            "Agent to assist with any feedback-related questions.",
            instructions: `You are an agent capable of handling any
            feedback-related questions.` });

            const other = AIAgent.from({ name: "other", description: "Agent to
            assist with any general questions.", instructions: `You are an agent
            capable of handling any general questions.` });


            const triage = AIAgent.from({
              name: "triage",
              instructions: `You are an agent capable of routing questions to the appropriate agent.`,
              skills: [productSupport, feedback, other],
              toolChoice: "router",
            });


            const aigne = new AIGNE({ model });


            const result = await aigne.invoke(triage, "How to use this
            product?");

            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
    zh:
      properties:
        b2jrz12ik7esf93z:
          value: router-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE } from "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            const productSupport = AIAgent.from({ name: "product_support",
            description: "Agent to assist with any product-related questions.",
            instructions: `You are an agent capable of handling any
            product-related questions.` });

            const feedback = AIAgent.from({ name: "feedback", description:
            "Agent to assist with any feedback-related questions.",
            instructions: `You are an agent capable of handling any
            feedback-related questions.` });

            const other = AIAgent.from({ name: "other", description: "Agent to
            assist with any general questions.", instructions: `You are an agent
            capable of handling any general questions.` });


            const triage = AIAgent.from({
              name: "triage",
              instructions: `You are an agent capable of routing questions to the appropriate agent.`,
              skills: [productSupport, feedback, other],
              toolChoice: "router",
            });


            const aigne = new AIGNE({ model });


            const result = await aigne.invoke(triage, "How to use this
            product?");

            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
  df15a417f7815db4:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: "Handoff Pattern: Seamless Team Collaboration"
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: Let your specialized agents team up! The Handoff pattern enables a smooth
                  transfer of control from one agent to another, creating a
                  dynamic duo (or trio!) to solve complex problems. It's like
                  having an expert consultant on call, ready to jump in when
                  needed. The collaborative possibilities are endless!
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 移交模式：无缝的团队协作
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: 让你的专长代理协同工作！移交模式可实现从一个代理到另一个代理的顺畅控制转移，组成动态组合以解决复杂问题。它就像随时可用的专家顾问，准备在需要时介入。协作的可能性无限。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  d7a5f72157229157:
    en:
      properties:
        b2jrz12ik7esf93z:
          value: handoff-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE } from "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            function transfer_to_b() {
              return agentB;
            }


            const agentA = AIAgent.from({
              name: "AgentA",
              instructions: "You are a helpful agent.",
              outputKey: "A",
              skills: [transfer_to_b],
            });


            const agentB = AIAgent.from({
              name: "AgentB",
              instructions: "Only speak in Haikus.",
              outputKey: "B",
            });


            const aigne = new AIGNE({ model });


            const userAgent = aigne.invoke(agentA);


            const result1 = await userAgent.invoke("transfer to agent b");

            console.log(result1);
        d8hvf7cxz93jk5p:
          value: 1rem
    zh:
      properties:
        b2jrz12ik7esf93z:
          value: handoff-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE } from "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            function transfer_to_b() {
              return agentB;
            }


            const agentA = AIAgent.from({
              name: "AgentA",
              instructions: "You are a helpful agent.",
              outputKey: "A",
              skills: [transfer_to_b],
            });


            const agentB = AIAgent.from({
              name: "AgentB",
              instructions: "Only speak in Haikus.",
              outputKey: "B",
            });


            const aigne = new AIGNE({ model });


            const userAgent = aigne.invoke(agentA);


            const result1 = await userAgent.invoke("transfer to agent b");

            console.log(result1);
        d8hvf7cxz93jk5p:
          value: 1rem
  c538306628f58aa2:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: "Reflection Pattern: AI That Learns and Improves"
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: Build agents that get smarter over time! The Reflection pattern creates a
                  powerful feedback loop, where one agent's work is reviewed and
                  refined by another. This iterative process is perfect for
                  tasks like code reviews or content quality control, ensuring
                  your final output is polished to perfection. You'll be amazed
                  at the quality you can achieve.
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 反思模式：会学习并改进的 AI
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: 构建随着时间变得更智能的代理！反思模式建立强大的反馈循环，一个代理的工作会由另一个代理审查并改进。此迭代过程非常适合代码审查或内容质量控制，确保最终产出经过润色。你会对所能达到的质量印象深刻。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  f42d95cd286babfe:
    en:
      properties:
        b2jrz12ik7esf93z:
          value: reflection-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, UserInputTopic, UserOutputTopic } from
            "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";

            import { z } from "zod";


            const { OPENAI_API_KEY } = process.env;

            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            const coder = AIAgent.from({
              subscribeTopic: [UserInputTopic, "rewrite_request"],
              publishTopic: "review_request",
              instructions: `You are a proficient coder. You write code to solve problems. Work with the reviewer to improve your code.`,
              outputSchema: z.object({ code: z.string().describe("Your code") }),
            });


            const reviewer = AIAgent.from({
              subscribeTopic: "review_request",
              publishTopic: (output) => output.approval ? UserOutputTopic : "rewrite_request",
              instructions: `You are a code reviewer. You focus on correctness, efficiency and safety of the code.`,
              outputSchema: z.object({
                approval: z.boolean().describe("APPROVE or REVISE"),
                feedback: z.object({
                  correctness: z.string().describe("Your comments on correctness"),
                  efficiency: z.string().describe("Your comments on efficiency"),
                  safety: z.string().describe("Your comments on safety"),
                  suggested_changes: z.string().describe("Your comments on suggested changes"),
                }),
              }),
              includeInputInOutput: true,
            });


            const aigne = new AIGNE({ model, agents: [coder, reviewer] });

            aigne.publish(UserInputTopic, "Write a function to find the sum of
            all even numbers in a list.");


            const { message } = await aigne.subscribe(UserOutputTopic);

            console.log(message);
        d8hvf7cxz93jk5p:
          value: 1rem
    zh:
      properties:
        b2jrz12ik7esf93z:
          value: reflection-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, UserInputTopic, UserOutputTopic } from
            "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";

            import { z } from "zod";


            const { OPENAI_API_KEY } = process.env;

            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            const coder = AIAgent.from({
              subscribeTopic: [UserInputTopic, "rewrite_request"],
              publishTopic: "review_request",
              instructions: `You are a proficient coder. You write code to solve problems. Work with the reviewer to improve your code.`,
              outputSchema: z.object({ code: z.string().describe("Your code") }),
            });


            const reviewer = AIAgent.from({
              subscribeTopic: "review_request",
              publishTopic: (output) => output.approval ? UserOutputTopic : "rewrite_request",
              instructions: `You are a code reviewer. You focus on correctness, efficiency and safety of the code.`,
              outputSchema: z.object({
                approval: z.boolean().describe("APPROVE or REVISE"),
                feedback: z.object({
                  correctness: z.string().describe("Your comments on correctness"),
                  efficiency: z.string().describe("Your comments on efficiency"),
                  safety: z.string().describe("Your comments on safety"),
                  suggested_changes: z.string().describe("Your comments on suggested changes"),
                }),
              }),
              includeInputInOutput: true,
            });


            const aigne = new AIGNE({ model, agents: [coder, reviewer] });

            aigne.publish(UserInputTopic, "Write a function to find the sum of
            all even numbers in a list.");


            const { message } = await aigne.subscribe(UserOutputTopic);

            console.log(message);
        d8hvf7cxz93jk5p:
          value: 1rem
  232d64ab8275e287:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: "Code Execution: Bring Your Logic to Life"
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: Ready for some real power? The Code Execution pattern lets your AI
                  dynamically generate and run code in a secure sandbox. This
                  unlocks incredible automation capabilities, from solving
                  complex algorithmic problems to performing on-the-fly data
                  analysis. It’s your agent's superpower!
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 代码执行：让你的逻辑变为现实
            style:
              variant: h4
        v5utpm7bu9yvdpnq:
          value: flex-start
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753781653625-ia4shqnk4
                type: text
                text: 准备好发挥真正的能力了吗？代码执行模式允许你的 AI
                  动态生成并在安全沙箱中运行代码。这为自动化带来强大能力，从解决复杂算法问题到执行即时数据分析。它是代理的强大功能。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  a357c273db4ff1f5:
    en:
      properties:
        b2jrz12ik7esf93z:
          value: code-execution-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, FunctionAgent } from "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";

            import { z } from "zod";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            const sandbox = FunctionAgent.from({
              name: "evaluateJs",
              description: "A js sandbox for running javascript code",
              inputSchema: z.object({ code: z.string().describe("The code to run") }),
              process: async (input: { code: string }) => {
                const { code } = input;
                const result = eval(code);
                return { result };
              },
            });


            const coder = AIAgent.from({
              name: "coder",
              instructions: `You are a proficient coder. You write code to solve problems. Work with the sandbox to execute your code.`,
              skills: [sandbox],
            });


            const aigne = new AIGNE({ model });


            const result = await aigne.invoke(coder, "10! = ?");

            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
    zh:
      properties:
        b2jrz12ik7esf93z:
          value: code-execution-workflow.ts
        e9kvx5d7y82lm3n:
          value: material
        a7frn5jmx5vpxpt3:
          value: >-
            import { AIAgent, AIGNE, FunctionAgent } from "@aigne/core";

            import { OpenAIChatModel } from
            "@aigne/core/models/openai-chat-model.js";

            import { z } from "zod";


            const { OPENAI_API_KEY } = process.env;


            const model = new OpenAIChatModel({ apiKey: OPENAI_API_KEY });


            const sandbox = FunctionAgent.from({
              name: "evaluateJs",
              description: "A js sandbox for running javascript code",
              inputSchema: z.object({ code: z.string().describe("The code to run") }),
              process: async (input: { code: string }) => {
                const { code } = input;
                const result = eval(code);
                return { result };
              },
            });


            const coder = AIAgent.from({
              name: "coder",
              instructions: `You are a proficient coder. You write code to solve problems. Work with the sandbox to execute your code.`,
              skills: [sandbox],
            });


            const aigne = new AIGNE({ model });


            const result = await aigne.invoke(coder, "10! = ?");

            console.log(result);
        d8hvf7cxz93jk5p:
          value: 1rem
  7782cfc0f86813a6:
    en:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: Ready to Build Your Masterpiece?
            style:
              variant: h1
        e8f3k7m2n9p4q1s5:
          value: true
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753381637728-mjjp8nvd5
                type: text
                text: You've seen the patterns, now it's your turn to create something amazing.
                  Grab these examples, start experimenting, and see what
                  incredible agentic workflows you can build with AIGNE.
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
    zh:
      properties:
        gs1rn5jmxfvpxptx:
          value:
            text: 准备好构建你的杰作了吗？
            style:
              variant: h1
        e8f3k7m2n9p4q1s5:
          value: true
        9ajrz12ik7esfk1z:
          value:
            list:
              - id: item-1753381637728-mjjp8nvd5
                type: text
                text: 你已经了解了这些模式，现在轮到你去创造令人惊叹的作品。获取这些示例，开始实验，看看使用 AIGNE 能构建出哪些强大的代理工作流。
                style:
                  color: ""
                  fontSize: 16px
                  variant: body1
  da9a1dc123c3f3b0:
    en:
      properties:
        b8x4m3n9kp7qtw5r:
          value:
            - id: btn-default-1
              type: link
              text: Explore All Examples
              url: link:///examples
              variant: contained
              size: large
              target: _blank
              needLogin: false
    zh:
      properties:
        b8x4m3n9kp7qtw5r:
          value:
            - id: btn-default-1
              type: link
              text: 探索所有示例
              url: link:///examples
              variant: contained
              size: large
              target: _blank
              needLogin: false
