meta:
  title: "AIGNE Framework Examples | Chatbots, MCP Integrations & Workflows"
  description: "Dive into practical AIGNE Framework examples! Explore ready-to-run demos for chatbots, MCP integrations with GitHub and Puppeteer, memory management, and complex workflows. Start building now!"
  image: "mediakit://aigne-framework.png"
sections:
  - sectionName: "examplesHero"
    sectionSummary: "An engaging hero section that immediately shows developers how to run an example using a code snippet, emphasizing the ease of getting started."
    heroTitle: "See AIGNE in Action: Ready-to-Run Examples"
    heroDescription: "Stop reading, start doing! This is your playground. Explore a ton of practical examples covering everything from basic chatbots to complex workflows and MCP integrations. Each one is ready to run with a single command."
    code:
      filename: "Quick Start with npx"
      content: "export OPENAI_API_KEY=YOUR_OPENAI_API_KEY # Set your OpenAI API key\n\n# Run in one-shot mode\nnpx -y @aigne/example-chat-bot\n\n# Or add `--chat` parameter to enter interactive chat mode\nnpx -y @aigne/example-chat-bot --chat"
    sectionBackground: "grey.900"
  - sectionName: "exampleCategories"
    sectionSummary: "Organizes the various examples into clear, thematic categories, allowing developers to quickly navigate to the area that interests them most."
    title: "Explore by Category"
    description: "Find the perfect starting point. We've grouped our examples to help you jump right into what interests you most, whether it's building a simple bot or orchestrating a complex agent workflow."
    list:
      - sectionName: "chatbotsAndMemory"
        sectionSummary: "Highlights examples related to building conversational agents with memory."
        iconifyIconName: "mdi:robot-happy-outline"
        cardTitle: "Chatbots & Memory"
        cardDescription: "Build conversational agents that can remember past interactions across sessions."
      - sectionName: "mcpIntegrations"
        sectionSummary: "Showcases examples of integrating with external tools via the Model Context Protocol."
        iconifyIconName: "mdi:power-plug-outline"
        cardTitle: "MCP Integrations"
        cardDescription: "Connect your agents to external tools and data sources like GitHub, Puppeteer, and SQLite."
      - sectionName: "coreWorkflows"
        sectionSummary: "Features examples demonstrating fundamental workflow patterns in AIGNE."
        iconifyIconName: "mdi:sitemap-outline"
        cardTitle: "Core Workflows"
        cardDescription: "Master powerful patterns like concurrency, sequential pipelines, and routing to build complex logic."
      - sectionName: "advancedConcepts"
        sectionSummary: "Points to examples covering more advanced AIGNE framework capabilities."
        iconifyIconName: "mdi:brain-outline"
        cardTitle: "Advanced Concepts"
        cardDescription: "Dive into complex topics like smart orchestration, reflection, and task handoff."
  - sectionName: "featureChatBot"
    sectionSummary: "A feature section dedicated to the basic chatbot example, providing a clear and accessible entry point for new developers."
    featureTitle: "Build Your First Chatbot"
    featureDescription: "Jumpstart your journey with a fundamental chatbot example. Learn the basics of creating and running an agent, handling one-shot queries, and enabling interactive chat mode. It's the perfect 'Hello, World!' for AIGNE."
    rightImage: "mediakit://aigne-cli.png"
    action:
      text: "Explore Chatbot Code"
      link: "https://github.com/AIGNE-io/aigne-framework/tree/main/examples/chat-bot"
  - sectionName: "featureMcpServer"
    sectionSummary: "Highlights the powerful MCP Server example, demonstrating how to extend MCP clients like Claude Code with custom AIGNE agents."
    featureTitle: "Serve Agents as MCP Tools"
    featureDescription: "Turn your agents into powerful tools for MCP-compatible clients like Claude Code. This example shows you how to expose custom agents over the Model Context Protocol, unlocking a new level of integration and capability."
    leftImage: "mediakit://aigne-observability.png"
    action:
      text: "See MCP Server Example"
      link: "https://github.com/AIGNE-io/aigne-framework/tree/main/examples/mcp-server"
  - sectionName: "moreIntegrations"
    sectionSummary: "Showcases the breadth of AIGNE's integration capabilities with a summary of GitHub, Puppeteer, and SQLite examples."
    title: "Connect to Anything"
    description: "Go beyond simple chat. Use the Model Context Protocol (MCP) to connect your agents to a universe of tools and data sources. Here are a few more examples to get your ideas flowing."
    list:
      - sectionName: "githubIntegration"
        sectionSummary: "Card for the GitHub integration example."
        iconifyIconName: "mdi:github"
        cardTitle: "GitHub Integration"
        cardDescription: "Automate repository tasks. Search repos, read files, and manage issues directly from your agent."
      - sectionName: "puppeteerIntegration"
        sectionSummary: "Card for the Puppeteer web extraction example."
        iconifyIconName: "mdi:web"
        cardTitle: "Puppeteer Web Extraction"
        cardDescription: "Empower your agent to navigate pages and extract live web content for analysis or summarization."
      - sectionName: "sqliteIntegration"
        sectionSummary: "Card for the SQLite database interaction example."
        iconifyIconName: "mdi:database"
        cardTitle: "SQLite Database Interaction"
        cardDescription: "Let your agent talk to your database. Create, query, and manage data using natural language."
    action:
      text: "View All Examples on GitHub"
      link: "https://github.com/AIGNE-io/aigne-framework/tree/main/examples"
  - sectionName: "llmFlexibility"
    sectionSummary: "A code showcase section that demonstrates how easily developers can switch between different Large Language Models."
    title: "Run with Your Favorite LLM"
    description: "AIGNE is built for flexibility. You can easily swap between different large language models by simply setting an environment variable. Try it out with OpenAI, Anthropic, Bedrock, and more."
    code:
      name: "LLM Configuration"
      content: "# Using OpenAI models\nexport MODEL=openai:gpt-4.1\nexport OPENAI_API_KEY=YOUR_OPENAI_API_KEY\n\n# Using Anthropic Claude models\nexport MODEL=anthropic:claude-3-7-sonnet-latest\nexport ANTHROPIC_API_KEY=YOUR_ANTHROPIC_API_KEY\n\n# Using Bedrock Nova models\nexport MODEL=bedrock:us.amazon.nova-premier-v1:0\nexport AWS_ACCESS_KEY_ID=\"\"\nexport AWS_SECRET_ACCESS_KEY=\"\"\nexport AWS_REGION=\"us-west-2\""
  - sectionName: "ctaBuild"
    sectionSummary: "A final Call-To-Action section encouraging developers to start building with the framework by pointing them to the documentation and workflow pages."
    title: "Ready to Build Your Own?"
    description: "You've seen what's possible. Now it's your turn! Grab an example, start tinkering, and see what amazing things you can create with the AIGNE Framework."
    ctaBackground: "grey.100"
    ctaActions:
      - text: "Get Started Now"
        link: "link:///docs/getting-started"
      - text: "Explore Workflows"
        link: "link:///workflows"
